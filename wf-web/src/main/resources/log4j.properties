# log4j \u65e5\u5fd7 create by \u9ec4\u56fd\u5e86
# ---------------------------------------------------------------------------------------------------------
#                                PATTERN   FORMATS   GLOSSARY                           
# ---------------------------------------------------------------------------------------------------------
#    %n   -   newline  
#    %m   -   your   log   message 
#    %p   -   message   priority   (FATAL,   ERROR,   WARN,   INFO,   DEBUG   or   custom) 
#    %r   -   millisecs   since   program   started   running 
#    %%   -   percent   sign   in   output 

# -----------------------SOME   MORE   CLUTTER   IN   YOUR   LOG-------------------------------------------
#    %c   -   name   of   your   category   (logger),   %c{2}   will   outputs   last   two   components
#    %t   -   name   of   current   thread
#    %x   -   Nested   Diagnostic   Context   (NDC)   (you   supply   it!) 

# -------------------------SLOW   PERFORMANCE   FORMATS----------------------------------------------------
#    %d   -   date   and   time,   also   %d{ISO8601},   %d{DATE},   %d{ABSOLUTE}, 
#             %d{HH:mm:ss,SSS},   %d{dd   MMM   yyyy   HH:mm:ss,SSS}   and   so   on
#    %l   -   Shortcut   for   %F%L%C%M  
#    %F   -   Java   source   file   name  
#    %L   -   Java   source   line   number 
#    %C   -   Java   class   name,   %C{1}   will   output   the   last   one   component
#    %M   -   Java   method   name

# ------------------------------FORMAT   MODIFIERS---------------------------------------------------------
#    %-any_letter_above   -   Left-justify   in   min.   width   (default   is   right-justify)
#    %20any_letter_above   -   20   char.   min.   width   (pad   with   spaces   if   reqd.)
#    %.30any_letter_above   -   30   char.   max.   width   (truncate   beginning   if   reqd.)
#    %-10.10r   -   Example.     Left-justify   time   elapsed   within   10-wide   field.
#                              Truncate   from   beginning   if   wider   than   10   characters. 
# ----------------------------------------------------------------------------------------------------------

log4j.rootLogger = error, console
#log4j.logger.org.springframework.orm.hibernate3=debug, webframe
#log4j.logger.org.hibernate=error, webframe
#log4j.logger.org.springframework=error, webframe
#log4j.logger.org.apache=error, webframe
log4j.logger.org.webframe.web=info, webframe

###################
# \u63a7\u5236\u53f0\u65e5\u5fd7
###################
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.Target=System.out
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} %m %l%n

########################
# \u6846\u67b6\u65e5\u5fd7
########################
log4j.appender.webframe=org.apache.log4j.DailyRollingFileAppender
log4j.appender.webframe.File = ${user.dir}/target/logs/webframe.log
log4j.appender.webframe.Append=true
log4j.appender.webframe.DatePattern='.'yyyy-MM-dd
log4j.appender.webframe.layout=org.apache.log4j.PatternLayout
log4j.appender.webframe.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} %m %l%n
